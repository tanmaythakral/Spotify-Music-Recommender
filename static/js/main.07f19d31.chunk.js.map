{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/BodyComponent.jsx","App.js","Home.js","index.js"],"names":["Header","class","Date","Footer","genreslist","BodyComponent","access_token","URL","window","location","hash","split","filter","el","match","useState","token","setToken","playlist","setPlaylist","uri","setUri","name","setName","songs","setSong","clicked","setClicked","response","setresponse","limit","setLimit","genreselector","setGenreselect","toptrack","setToptrack","topArtist","setTopArtist","dance","setDance","a","axios","headers","then","data","display_name","id","method","params","seed_artists","seed_genres","seed_tracks","target_danceability","recommendationsResponse","i","x","tracks","push","y","album","images","url","alert","catch","err","console","log","useEffect","track","items","random","Math","floor","length","artists","onChange","event","target","value","aria-label","map","genre","type","min","max","step","onClick","song","className","src","imageurl","alt","songname","playlistresponse","playlistsongs","App","authorize","replace","ReactDOM","render","StrictMode","basename","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.07f19d31.chunk.js","sourcesContent":["export default function Header() {\n    return (\n        <div>\n        <nav class=\"navbar\">\n        <div class=\"container-fluid\">\n            <span class=\"navbar-brand mb-0 h1\">Spotify Songs Recommender</span>\n        </div>\n        </nav>\n        </div>\n    );\n}","\n\nvar d = new Date();\n\nexport default function Footer() {\n    return (\n        <div>\n            <footer></footer>\n        </div>\n    )\n}","import React from 'react';\nimport axios from 'axios'\nimport { useState , useEffect} from 'react';\n\nconst Credentials = {\n    \"Spotify\" : [\n        {\n            \"ClientId\" : '302e8a7bf7464b7c8c53b0ed7fe09005'\n        }\n    ]\n}\n\nconst genreslist =  [\n      \"Alt Rock\",\n      \"Bluegrass\",\n      \"Blues\",\n      \"Classical\",\n      \"Country\",\n      \"Dance\",\n      \"Electro\",\n      \"Hard Rock\",\n      \"Heavy Metal\",\n      \"Hip Hop\",\n      \"House\",\n      \"Indie\",\n      \"Jrock\",\n      \"Kpop\",\n      \"Pop\"\n    ]\n\nexport default function BodyComponent() {\n    \n    var access_token = new URL(window.location).hash.split('&').filter(function(el) { if(el.match('access_token') !== null) return true; })[0].split('=')[1];\n\n    const [token , setToken ] = useState('')\n    const [genres , setGenres] = useState([])\n    const [playlist , setPlaylist] = useState('')\n    const [uri , setUri]  = useState('')\n    const [name , setName] = useState('')\n    const [songs , setSong] = useState([{}])\n    const [clicked , setClicked] = useState(false)\n    const [response , setresponse] = useState('')\n    const [limit , setLimit] = useState(10)\n    const [genreselector , setGenreselect] = useState('kpop')\n    const [toptrack , setToptrack] = useState('')\n    const [topArtist, setTopArtist] = useState('')\n    const [dance, setDance] = useState(.5)\n    \n    useEffect(() => {\n        axios('https://api.spotify.com/v1/me/top/tracks', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + access_token\n            }\n        })\n        .then(response => {\n\n            var track = []\n\n            for (let i = 0 ; i < 20 ; i++ ){\n                let x = response.data.items[i].id\n                track.push(x)\n            }\n\n            const random = Math.floor(Math.random() * track.length);\n\n            setToptrack(track[random])\n        });\n\n        axios('https://api.spotify.com/v1/me/top/artists', {\n            method: 'GET',\n            headers: {\n                'Authorization': 'Bearer ' + access_token\n            }\n        })\n        .then(response => {\n            var artists = []\n\n            for (let i = 0 ; i < 20 ; i++ ){\n                let x = response.data.items[i].id\n                artists.push(x)\n            }\n\n            const random = Math.floor(Math.random() * artists.length);\n            setTopArtist(artists[random])\n        });\n    },[])\n\n    function handleGenreChange(event) {\n        setGenreselect(event.target.value)\n    }\n\n    function handleDanceChange(event) {\n        setDance(event.target.value)\n    }\n    function createcomponent() {\n        return(\n            <div>\n                {\n                    songs.map((song) => (\n                        <div className=\"album row\">\n                        <img className = \"albumimage col-6\" src = {song.imageurl} alt = {song.songname}></img>\n                        <h1 className = \"albumnheading col-6\">{song.songname}</h1>\n                        </div>\n                        \n                    ))\n                }\n            </div>\n        );\n    }\n\n    function handleLimitChange(event) {\n        setLimit(event.target.value)\n    }\n\n    async function recommendations() {\n        axios('https://api.spotify.com/v1/me',{\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization'  : 'Bearer ' + token\n            },\n            })\n            .then(response =>{\n                setName(response.data.display_name)\n                setresponse(response.data.id)\n            });\n        var uri = []\n        var songs = []\n        setToken(access_token)\n        await axios('https://api.spotify.com/v1/recommendations' , {\n            method: 'GET',\n            params: {\n                limit: limit,\n                seed_artists : topArtist , \n                seed_genres :  genreselector,\n                seed_tracks : toptrack ,\n                target_danceability : dance\n            },\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization'  : 'Bearer ' + token\n            },\n        })\n        .then(recommendationsResponse => {\n            for (let i = 0; i<limit;  i++) {\n                let x = recommendationsResponse.data.tracks[i].uri\n                uri.push(x)\n                let y = {'songname' :  recommendationsResponse.data.tracks[i].name, 'imageurl' : recommendationsResponse.data.tracks[i].album.images[1].url}\n                songs.push(y)\n            }\n            setUri(uri)\n            setSong(songs)\n            setClicked(true)\n            alert(\"Checkout your recommendations! Hit button again for another set or scroll down to add them on spotify\")\n            ;}).catch(err => {\n                console.log(err)\n                // if (err.response) {\n                //     if (err.response.status === 400) {\n                //         recommendations()\n                //     }\n                //   }\n            })\n        \n    };\n\n    function makeplaylist() {\n        \n            \n            axios('https://api.spotify.com/v1/users/'+ response +'/playlists' , {\n                method: 'POST',\n                data: {\n                    'name' : 'My Playlist',\n                    'description' : 'Created by KingShadow285',\n                    'public' : false\n                },\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization'  : 'Bearer ' + token\n                },\n            })\n            .then(playlistresponse => {\n                setPlaylist(playlistresponse.data.id)\n                axios('https://api.spotify.com/v1/playlists/'+ playlist + '/tracks' , {\n                    method: 'Post',\n                    data: {\n                        'uris' : uri\n                    },\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization'  : 'Bearer ' + token\n                    },\n                }).then(playlistsongs => {\n                   alert(\"Songs have been added!\") \n                }).catch(err => {\n                    console.log(err)\n                })\n            });\n    }\n\n    return (\n        <>\n            <div>\n            <div class=\"mb-3\">\n            <h2>Choose your Genre!</h2>\n            <select class=\"genre-select form-select form-select-lg mb-3\" onChange={handleGenreChange} aria-label=\".form-select-lg example\">\n            {\n                genreslist.map((genre , i) => (<option value={i}>{genre}</option>))\n            }\n            </select>\n            <h2>How many recommendations do you need?</h2>\n            <input value = {limit} type=\"number\" onChange = {handleLimitChange} min=\"1\" max = \"100\" class=\"form-control\" id=\"exampleInputPassword1\" />\n            <h2>How much do you feel like Dancing?</h2>\n            <input type=\"range\" onChange = {handleDanceChange} class=\"form-range\" min=\"0\" max=\"1\" step = \".001\" id=\"customRange2\"></input>\n            </div>\n            <button id = \"get-recom\"onClick={recommendations} >Get Recommended</button>\n            {clicked ? <h1 class = \"welcome-header\">Ok! <span id = \"name\">{name}</span> let's get started</h1> : null}\n            {clicked ? createcomponent() : null}\n            {clicked ? <button onClick={makeplaylist} id = \"addtoplaylist\">Add to Spotify</button> : null}\n            </div>\n        </>\n    );\n    \n}","import Header from './components/Header';\nimport Footer from './components/Footer';\nimport BodyComponent from './components/BodyComponent';\nimport React from 'react'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header/>\n    <BodyComponent/>\n    <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Credentials = {\r\n    \"Spotify\" : [\r\n        {\r\n            \"ClientId\" : '302e8a7bf7464b7c8c53b0ed7fe09005'\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nfunction authorize(){\r\n    // axios('https://accounts.spotify.com/authorize', {\r\n    //     method: 'redirect',\r\n    //     // crossDomain: true,\r\n    //     crossDomain : true,\r\n    //     // crossorigin : true,\r\n    // params: {\r\n    // client_id: Credentials.Spotify[0].ClientId ,\r\n    // redirect_uri: 'http://localhost:3000/search',\r\n    // response_type: 'token',\r\n    // scope: \"playlist-modify-public playlist-modify-private user-top-read\"\r\n    // }})\r\n    // .then(authorizeResponse =>{\r\n    //     console.log(authorizeResponse.request.responseURL);\r\n    //     window.location.replace(authorizeResponse.request.responseURL);\r\n    // });\r\n    window.location.replace(\"https://accounts.spotify.com/authorize?client_id=302e8a7bf7464b7c8c53b0ed7fe09005&redirect_uri=http:%2F%2Flocalhost:3000%2Fsearch&response_type=token&scope=playlist-modify-public+playlist-modify-private+user-top-read\");\r\n};\r\n\r\nexport default function Home() {\r\n    return(\r\n        <div>\r\n            <h1 class = \"welcome-header\">Hello</h1>\r\n            <button onClick={authorize}>Click to authorize</button>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './stylesheet.css'\nimport Home from './Home';\nimport { BrowserRouter as Router , Switch , Route} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router basename = \"/Spotify-Music-Recommender\">\n    <Switch>\n      <Route path = \"/\" exact component = {Home} />\n      <Route path = \"/search\" component = {App} />\n    </Switch>\n  </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}